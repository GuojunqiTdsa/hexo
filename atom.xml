<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qiii~的博客</title>
  
  <subtitle>一个想记录所有知识点+BUG的菜鸟</subtitle>
  <link href="/hexo/atom.xml" rel="self"/>
  
  <link href="https://guojunqitdsa.github.io/"/>
  <updated>2019-01-07T01:36:42.144Z</updated>
  <id>https://guojunqitdsa.github.io/</id>
  
  <author>
    <name>Qiii~</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端之Element入门</title>
    <link href="https://guojunqitdsa.github.io/2019/01/06/%E5%89%8D%E7%AB%AF%E4%B9%8BElement%E5%85%A5%E9%97%A8/"/>
    <id>https://guojunqitdsa.github.io/2019/01/06/前端之Element入门/</id>
    <published>2019-01-06T00:53:13.000Z</published>
    <updated>2019-01-07T01:36:42.144Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>element是一套为开发者、设计师和产品经理准备的级域Vue2.0的桌面端组件库，可以使用vue快速搭建前端</p></blockquote><a id="more"></a><h1 id="入门安装"><a href="#入门安装" class="headerlink" title="入门安装"></a>入门安装</h1><blockquote><p>前提需求 <code>nodejs</code> <code>npm</code> <code>vue-cli</code></p></blockquote><p>第一步、创建vue项目</p><blockquote><p>可以使用命令创建，也可以使用idea创建</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建webpack项目</span></span><br><span class="line">vue init wabpack my-project</span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>第二部、在vue项目里安装 <code>element-ui</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i element-ui -S</span><br></pre></td></tr></table></figure><p>第三部、引用，下面详细记录</p><h1 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h1><h2 id="方式一、完整引入"><a href="#方式一、完整引入" class="headerlink" title="方式一、完整引入"></a>方式一、完整引入</h2><p>在 <code>main.js</code> 中引入如下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="方式二、按需引用"><a href="#方式二、按需引用" class="headerlink" title="方式二、按需引用"></a>方式二、按需引用</h2><p>借助 <code>babel-plugin-component</code><br>，我们可以只引入需要的组建，以达到减小项目体积的目的。<br>首先、安装 <code>babel-plugin-component</code> </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install babel-plugin-component -D</span><br></pre></td></tr></table></figure><p>然后，将 <code>.babelrc</code> 文件修改为</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [[<span class="string">"es2015"</span>, &#123; <span class="attr">"modules"</span>: <span class="literal">false</span> &#125;]],</span><br><span class="line">  <span class="attr">"plugins"</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"component"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">        <span class="attr">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果只希望引入部分组件，如： <code>Button</code> 和 <code>Select</code> ，那么在 <code>main.js</code> 中写入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Button, Select &#125; <span class="keyword">from</span> <span class="string">'element-ui'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span>;</span><br><span class="line"></span><br><span class="line">Vue.component(Button.name, Button);</span><br><span class="line">Vue.component(Select.name, Select);</span><br><span class="line"><span class="comment">/* 或写为</span></span><br><span class="line"><span class="comment"> * Vue.use(Button)</span></span><br><span class="line"><span class="comment"> * Vue.use(Select)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>完整组件列表和引入方式以 <a href="https://github.com/ElemeFE/element/blob/master/components.json" target="_blank" rel="noopener">https://github.com/ElemeFE/element/blob/master/components.json</a> 为准</p><p>到此为止 <code>Element-ui</code> 就算是搭建成功了，剩下的就是在 <code>App.vue</code> 中添加组件，开始搭建网站了</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;element是一套为开发者、设计师和产品经理准备的级域Vue2.0的桌面端组件库，可以使用vue快速搭建前端&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="web" scheme="https://guojunqitdsa.github.io/tags/web/"/>
    
      <category term="前端" scheme="https://guojunqitdsa.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="element" scheme="https://guojunqitdsa.github.io/tags/element/"/>
    
      <category term="后台组件" scheme="https://guojunqitdsa.github.io/tags/%E5%90%8E%E5%8F%B0%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://guojunqitdsa.github.io/2019/01/04/hello-world/"/>
    <id>https://guojunqitdsa.github.io/2019/01/04/hello-world/</id>
    <published>2019-01-04T05:42:50.882Z</published>
    <updated>2019-01-07T01:36:59.867Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这是我正式在自己的个人博客写下第一篇文章，留作纪念<br>由于刚刚搭建博客，markdown还不太会用，所以现在我是一边查询手册，一边写下第一篇博客<br>想想也是比较费劲，有机会一定要好好整理一篇markdown的文档</p></blockquote><a id="more"></a><h1 id="博客搭建流程"><a href="#博客搭建流程" class="headerlink" title="博客搭建流程"></a>博客搭建流程</h1><h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><p>Hexo 使用 Node.js 编写。得益于 Node.js，使得 Hexo 生成上百个页面游刃有余。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装Hexo之前需要两个工具</p><ul><li>node.js</li><li>git</li></ul><blockquote><p>在这里这两个安装就不再叙述了，有机会单独写一篇</p></blockquote><p>首先需要安装 <code>hexo-cli</code> ，可以直接使用<code>node.js</code>的<code>npm</code>命令就可以安装了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h2><h3 id="建立网站"><a href="#建立网站" class="headerlink" title="建立网站"></a>建立网站</h3><p>首先创建一个文件夹，我这里文件夹名为<code>hexo</code><br>然后进入到这个文件夹里，使用<code>hexo</code>命令安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;your_blog_name&gt;</span><br></pre></td></tr></table></figure><h3 id="配置网站"><a href="#配置网站" class="headerlink" title="配置网站"></a>配置网站</h3><p>在网站根目录里有一个<code>_config.yml</code>文件用来配置整个网站</p><blockquote><p>在后面的主题目录中还有<code>_config.yml</code>文件<br>WARNING:在 YAML 语法中，冒号后面必须要有一个空格才能继续写下去。<br>配置文件中参数过多，所以给出一个链接，可以到该网页上查看<br><a href="https://easyhexo.github.io/Easy-Hexo/1-Hexo-install-and-config/1-3-config-hexo.html#%E9%85%8D%E7%BD%AE-hexo-2" target="_blank" rel="noopener">https://easyhexo.github.io/Easy-Hexo/1-Hexo-install-and-config/1-3-config-hexo.html#%E9%85%8D%E7%BD%AE-hexo-2</a></p></blockquote><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>初始化命令, <code>layout</code> 表示他的模板（即页面或者文章），<code>title</code> 表示标题。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><blockquote><p><code>hexo new post 001</code> ，表示新建了一个标题为 001 的文章。<br><code>hexo new page 001</code> ，表示新建了一个标题为 001 的页面。</p></blockquote><p>创建的文件在<code>博客根目录/source/_post/</code>，然后使用markdown的工具，对创建的文件进行编辑就可以可</p><h3 id="部署到git"><a href="#部署到git" class="headerlink" title="部署到git"></a>部署到git</h3><p>在git上创建一个仓库，我这里是<code>hexo</code><br>安装部署插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><p>配置git</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"Your_name"</span></span><br><span class="line">$ git config --global user.email Your_email@example.com</span><br></pre></td></tr></table></figure><blockquote><p>每次提交用以上配置的git的信息记录是谁提交</p></blockquote><p>配置站点 <code>_config.yml</code> 文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span>   <span class="comment"># 类型填git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span> <span class="comment"># 你的Github仓库地址</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span>  <span class="comment"># 分支名称。默认填写 master 如果您使用的是 GitHub ，程序会尝试自动检测。</span></span><br><span class="line"><span class="attr">  message:</span>  <span class="comment"># 提交信息可以自定义，不填的话默认为提交时间</span></span><br></pre></td></tr></table></figure><p>在你的 Hexo 站点根目录下，执行如下命令即可发布到 GitHub Pages 上。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo d -g</span><br></pre></td></tr></table></figure><hr><p>自定义域名</p><ul><li><p>如果你拥有个人域名，请将你的域名解析指向以下 IP 地址中的任意一个</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure></li><li><p>打开仓库设置,找到 GitHub Pages 项目，修改 Custom domain 选项的值为你的自定义域名（不带 http 等前缀）</p></li><li>勾选 Custom domain 选项下的 Enforce HTTPS 选项，开启 Https 服务。</li></ul>]]></content>
    
    <summary type="html">
    
      Hello World
    
    </summary>
    
    
      <category term="bolg" scheme="https://guojunqitdsa.github.io/tags/bolg/"/>
    
      <category term="hexo" scheme="https://guojunqitdsa.github.io/tags/hexo/"/>
    
      <category term="git" scheme="https://guojunqitdsa.github.io/tags/git/"/>
    
      <category term="node" scheme="https://guojunqitdsa.github.io/tags/node/"/>
    
  </entry>
  
</feed>
